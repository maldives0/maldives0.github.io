<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://maliethy.github.io</id><title>개발장이</title><subtitle>사람이란 흐르는 강물과 같아 하루하루가 다르고 새롭다</subtitle> <updated>2021-04-29T12:44:06+09:00</updated> <author> <name>juyoung jung</name> <uri>https://maliethy.github.io</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://maliethy.github.io" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator> <rights> © 2021 juyoung jung </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>github.io에서 velog로 블로그 이사합니다.</title><link href="https://maliethy.github.io/posts/move-blog-to-velog/" rel="alternate" type="text/html" title="github.io에서 velog로 블로그 이사합니다." /><published>2021-01-30T20:11:00+09:00</published> <updated>2021-01-30T20:11:00+09:00</updated> <id>https://maliethy.github.io/posts/move-blog-to-velog/</id> <content src="https://maliethy.github.io/posts/move-blog-to-velog/" /> <author> <name>juyoung jung</name> </author> <category term="project" /> <category term="github.io" /> <summary> 블로그 이사합니다! github.io에서 velog로 블로그 이사합니다- change blog platform </summary> </entry> <entry><title>webpack-html과 scss 그리고 code spliting 적용하기</title><link href="https://maliethy.github.io/posts/webpackConfig-html_scss/" rel="alternate" type="text/html" title="webpack-html과 scss 그리고 code spliting 적용하기" /><published>2021-01-20T20:11:00+09:00</published> <updated>2021-01-20T20:11:00+09:00</updated> <id>https://maliethy.github.io/posts/webpackConfig-html_scss/</id> <content src="https://maliethy.github.io/posts/webpackConfig-html_scss/" /> <author> <name>juyoung jung</name> </author> <category term="webpack" /> <category term="html" /> <summary> webpack으로 scss와 code spliting, 이미지 가져오기를 적용해보았다. 가장 문제가 되었던 것이 webpack-dev-server와 build한 파일의 publicPath가 일치하지 않은 것이었다. production mode일 때, publicPath에 파일들이 위치할 서버 상의 경로를 넣어주면 빌드 시에는 번들한 파일 이름 앞에 해당 설정값이 포함되어 html에 script 태그로 자동 입력된다. 나의 경우 로컬의 파일구조 /webpack/dist/를 설정값에 적어주면 html에 /webpack/dist/(번들된 파일)로 자동으로 입력되었다. &amp;lt;script defer="defer" src="/webpack/dist/vendor.0ef3ea92ffc39d3f0fbb... </summary> </entry> <entry><title>Algorithm-삽입 정렬</title><link href="https://maliethy.github.io/posts/insertSort/" rel="alternate" type="text/html" title="Algorithm-삽입 정렬" /><published>2021-01-18T21:11:00+09:00</published> <updated>2021-01-18T21:11:00+09:00</updated> <id>https://maliethy.github.io/posts/insertSort/</id> <content src="https://maliethy.github.io/posts/insertSort/" /> <author> <name>juyoung jung</name> </author> <category term="algorithm" /> <category term="tutorial" /> <summary> zeroCho blog: 삽입 정렬의 예시를 공부하며 쓴 블로그 글입니다. 삽입 정렬은 첫 숫자는 놔두고, 두 번째 자리 숫자부터 뽑아서 그 숫자가 첫 숫자보다 크면 첫 숫자 오른쪽에, 작으면 왼쪽에 넣는다. 이러한 과정을 반복해 숫자를 오름차순으로 정렬한다. const insertionSort = function (array) { let i = 1, j, temp; for (i; i &amp;lt; array.length; i++) { temp = array[i]; for (j = i - 1; j &amp;gt;= 0 &amp;amp;&amp;amp; temp &amp;lt; array[j]; j--) { array[j + 1] = array[j]; } array[j +... </summary> </entry> <entry><title>고차함수 응용하기, add(2, 3)와 add(2)(3)</title><link href="https://maliethy.github.io/posts/higerOrder_function_exam/" rel="alternate" type="text/html" title="고차함수 응용하기, add(2, 3)와 add(2)(3)" /><published>2021-01-17T17:11:00+09:00</published> <updated>2021-01-17T17:11:00+09:00</updated> <id>https://maliethy.github.io/posts/higerOrder_function_exam/</id> <content src="https://maliethy.github.io/posts/higerOrder_function_exam/" /> <author> <name>juyoung jung</name> </author> <category term="project" /> <category term="resolution" /> <summary> add(2, 3)와 add(2)(3)값이 모두 5가 나올 수 있는 함수를 만드는 방법이다. 고차함수를 이용하면 이 문제를 해결할 수 있다. function add(a) { return function (b) { return a + b; }; } 또는; const add = (a) =&amp;gt; (b) =&amp;gt; a + b; add(2)(3); // 5 function add(a, b) { const isB = function (b) { return a + b; }; if (typeof b == 'undefined') { return isB; } else { return isB(b); } } // console.log(add(2, 5)); ... </summary> </entry> <entry><title>daon 동영상 로딩 오류 문제 해결하기</title><link href="https://maliethy.github.io/posts/service-worker/" rel="alternate" type="text/html" title="daon 동영상 로딩 오류 문제 해결하기" /><published>2021-01-16T23:11:00+09:00</published> <updated>2021-01-18T22:00:47+09:00</updated> <id>https://maliethy.github.io/posts/service-worker/</id> <content src="https://maliethy.github.io/posts/service-worker/" /> <author> <name>juyoung jung</name> </author> <category term="project" /> <category term="resolution" /> <summary> 1. 문제상황: video 로딩중 service worker에 에러 발생 &amp;lt;video controls autoplay loop muted&amp;gt; &amp;lt;source src="img/main/water.mp4" type="video/mp4" /&amp;gt; &amp;lt;/video&amp;gt; 다음과 같은 동영상 파일을 로드하는 과정에서 아래와 같은 오류가 발생했다. sw.js:1 Uncaught (in promise) TypeError: Failed to execute ‘put’ on ‘Cache’: Partial response (status code 206) is unsupported at sw.js:1 &amp;gt; HTTP 206 상태코드가 어떤 의미인지부터 찾아보니 206... </summary> </entry> </feed>
